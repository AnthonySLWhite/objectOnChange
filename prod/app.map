{"version":3,"sources":["app.js"],"names":["onChange","isPrimitive","value","proxyTarget","Symbol","x","object","setStateStatus","inApply","changed","propCache","WeakMap","handleChange","invalidateCachedDescriptor","target","property","has","get","delete","handler","receiver","Reflect","descriptor","set","Map","props","prop","getOwnPropertyDescriptor","configurable","undefined","writable","Proxy","previous","Array","isArray","SetState","obj","Object","keys","map","result","defineProperty","deleteProperty","apply","thisArg","argumentsList"],"mappings":"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","file":"app.map","sourceRoot":"..\\src","sourcesContent":["import '@babel/polyfill';\r\nconst isPrimitive = value =>\r\n  value === null ||\r\n  (typeof value !== 'object' && typeof value !== 'function');\r\nconst proxyTarget = Symbol('ProxyTarget');\r\nconst x = 0;\r\nconst onChange = (onChange, object = {}, setStateStatus = 0) => {\r\n  object === null ? (object = {}) : 0;\r\n  let inApply = false;\r\n  let changed = false;\r\n  const propCache = new WeakMap();\r\n\r\n  const handleChange = value => {\r\n    if (!inApply) {\r\n      onChange(value);\r\n    } else if (!changed) {\r\n      changed = true;\r\n    }\r\n  };\r\n\r\n  const getOwnPropertyDescriptor = (target, property) => {\r\n    if (!propCache.has(target)) {\r\n      propCache.set(target, new Map());\r\n    }\r\n\r\n    const props = propCache.get(target);\r\n    if (props.has(property)) {\r\n      return props.get(property);\r\n    }\r\n\r\n    const prop = Reflect.getOwnPropertyDescriptor(\r\n      target,\r\n      property,\r\n    );\r\n    props.set(property, prop);\r\n\r\n    return prop;\r\n  };\r\n\r\n  const invalidateCachedDescriptor = (target, property) => {\r\n    if (!propCache.has(target)) {\r\n      return;\r\n    }\r\n\r\n    const props = propCache.get(target);\r\n    props.delete(property);\r\n  };\r\n\r\n  const handler = {\r\n    get(target, property, receiver) {\r\n      if (property === proxyTarget) {\r\n        return target;\r\n      }\r\n\r\n      const value = Reflect.get(target, property, receiver);\r\n      if (isPrimitive(value)) {\r\n        return value;\r\n      }\r\n\r\n      // Preserve invariants\r\n      const descriptor = getOwnPropertyDescriptor(\r\n        target,\r\n        property,\r\n      );\r\n      if (descriptor && !descriptor.configurable) {\r\n        if (descriptor.set && !descriptor.get) {\r\n          return undefined;\r\n        }\r\n\r\n        if (descriptor.writable === false) {\r\n          return value;\r\n        }\r\n      }\r\n\r\n      return new Proxy(value, handler);\r\n    },\r\n\r\n    set(target, property, value, receiver) {\r\n      if (value && value[proxyTarget] !== undefined) {\r\n        value = value[proxyTarget];\r\n      }\r\n\r\n      const previous = Reflect.get(\r\n        target,\r\n        property,\r\n        value,\r\n        receiver,\r\n      );\r\n      if (setStateStatus) {\r\n        if (!Array.isArray(value) && typeof value === 'object') {\r\n          value.SetState = function(obj) {\r\n            Object.keys(obj).map(\r\n              prop => (value[prop] = obj[prop]),\r\n            );\r\n            handleChange(obj);\r\n          };\r\n        }\r\n      }\r\n      const result = Reflect.set(target, property, value);\r\n\r\n      if (previous !== value) {\r\n        handleChange(value);\r\n      }\r\n\r\n      return result;\r\n    },\r\n\r\n    defineProperty(target, property, descriptor) {\r\n      const result = Reflect.defineProperty(\r\n        target,\r\n        property,\r\n        descriptor,\r\n      );\r\n      invalidateCachedDescriptor(target, property);\r\n\r\n      handleChange(target);\r\n\r\n      return result;\r\n    },\r\n\r\n    deleteProperty(target, property) {\r\n      const result = Reflect.deleteProperty(target, property);\r\n      invalidateCachedDescriptor(target, property);\r\n      handleChange(target);\r\n\r\n      return result;\r\n    },\r\n\r\n    apply(target, thisArg, argumentsList) {\r\n      if (!inApply) {\r\n        inApply = true;\r\n\r\n        const result = Reflect.apply(\r\n          target,\r\n          thisArg,\r\n          argumentsList,\r\n        );\r\n\r\n        if (changed) {\r\n          onChange(thisArg);\r\n        }\r\n\r\n        inApply = false;\r\n        changed = false;\r\n\r\n        return result;\r\n      }\r\n\r\n      return Reflect.apply(target, thisArg, argumentsList);\r\n    },\r\n  };\r\n\r\n  return new Proxy(object, handler);\r\n};\r\n\r\nexport default onChange;\r\n"]}